# ————————————————————————————————————————
# ■ ファシリテーターを決めるプログラミング
# ————————————————————————————————————————

# ■ シンプルプラン
# 【要件】
# ・【必須】誰が当番なのかわかる
# ・基本メンバーを50音順に配列登録（できればデータベースに保存したい……）
# ・欠席者がいた場合、先頭の名前と比較して一致していたら、欠席者の順番をひとつ後ろに回す。
# 　いなければ先頭の人が本日のファシリテーター
# ・データベースを更新する

# ————————————————————————————————————————

# メンバーの登録
# 【メモ】できればデータベースに保存したものを取得したい
members = ["逢見", "近江", "橋本", "原", "松村"]

# — — — — — — — — — — — — — — — — — — — — —

# 欠席者の登録
absence = []

# 終了が押されるまで繰り返す
puts "本日の欠席者を数字で入力してください"
puts "0.逢見さん  1.近江さん  2.橋本さん  3.原さん  4.松村さん  5.終了"

while true
    number = gets.to_i
    # puts "——————————"
    # puts "number#{number}"

    if number == 5
        # 5が入力されたら処理を終える
        # puts "5が入力された"
        break
    else
        # 欠席者を登録する
        # puts "5以外"
        absence << members[number]
    end
end

p absence

# — — — — — — — — — — — — — — — — — — — — —
# 欠席者の有無に応じて順番を入れ替える

# 欠席者の人数分繰り返す（iを使ったほうが綺麗か？）
if (absence.length) != 0
    for i in 0..((absence.length)-1) do 
        puts "(absence.length)が機能しているか#{(absence.length)}"
        # 先頭と欠席者が一致していたら入れ替える
        # if absence[i] == menbers[0]


    end
end
